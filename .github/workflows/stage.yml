name: CICD Pipeline - Stage Env
on:
  pull_request:
    types: [closed]
    branches:
      - stage
  push:

env:
  APP_NAME: ci-cd-test
  AWS_DEFAULT_REGION: us-west-2

jobs:
#  test:
#    if: ${{github.event}} == 'push'
#    runs-on: ubuntu-20.04
#    steps:
#      - name: UnitTests
#        run: echo "this is a test"
#
#
#  build:
#    if: ${{github.event}} == 'pull_request'
#    runs-on: ubuntu-20.04
#    environment: stage
#    steps:
#      - name: Checkout Latest Commit
#        uses: actions/checkout@v2
#
#      - name: Configure AWS credentials
#        uses: aws-actions/configure-aws-credentials@v1
#        with:
#          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
#          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
#          aws-region: ${{ env.AWS_DEFAULT_REGION}}
#
#      - name: Login to Amazon ECR
#        id: login-ecr
#        uses: aws-actions/amazon-ecr-login@v1
#
#      - name: Build, tag, and push image to Amazon ECR
#        env:
#          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
#          ECR_REPOSITORY: ${{ env.APP_NAME }}
#          IMAGE_TAG: ${{ github.sha }}
#        run: |
#          docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .
#          docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG


  deploy:
    if: ${{github.event}} == 'push'  # 'pull_request'
#    needs: [build]
    runs-on: ubuntu-20.04
    environment: stage
    env:
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
    defaults:
      run:
        working-directory: terraform/
    steps:
      - name: Checkout Latest Commit
        uses: actions/checkout@v2

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v1
        with:
          terraform_version: 0.14.3

      - name: Terraform Init
        run: terraform init -backend-config=bucket=$TF_BUCKET -backend-config=key=$TF_STATE_KEY
        env:
          TF_BUCKET: config-bucket-${{ secrets.AWS_ACCOUNT_ID }}-${{ env.AWS_DEFAULT_REGION }}
          TF_STATE_KEY: tf/${{ env.APP_NAME }}.tfstate

      - name: Terraform Apply
        run: terraform apply -input=false