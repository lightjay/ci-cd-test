name: CICD Pipeline - Stage Env
on:
  pull_request:
    types: [closed]
    branches:
      - stage
  push:

env:
  APP_NAME: ci-cd-test


jobs:
#  test:
#    if: ${{github.event}} == 'push'
#    runs-on: ubuntu-20.04
#    steps:
#      - name: UnitTests
#        run: echo "this is a test"


  build:
    if: ${{github.event}} == 'push'  # 'pull_request'
#    needs: [test]
    runs-on: ubuntu-20.04
#    container: amazon/aws-cli
#    services:
#      docker:
#        image: docker:dind
    environment: stage
#    env:
#      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
#      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
#      AWS_DEFAULT_REGION: ${{ secrets.AWS_DEFAULT_REGION }}
#      DOCKER_REGISTRY_URL: ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ secrets.AWS_DEFAULT_REGION }}.amazonaws.com
#      COMMIT_HASH: ${{ github.sha }}
    steps:
      - name: Checkout Latest Commit
        uses: actions/checkout@v2

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-west-2

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Build, tag, and push image to Amazon ECR
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          ECR_REPOSITORY: env.APP_NAME
          IMAGE_TAG: ${{ github.sha }}
        run: |
          docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG

#      - name: Docker Build and Push
#        run: |
#          amazon-linux-extras install docker
#          aws --version
#          docker --version
#          aws ecr get-login-password | docker login --username AWS --password-stdin $DOCKER_REGISTRY_URL
#          docker build --pull -t "$DOCKER_REGISTRY_URL/$APP_NAME:$COMMIT_HASH" .
#          docker push "$DOCKER_REGISTRY_URL/$APP_NAME:$COMMIT_HASH"


#
#  tf-run:
#    if: contains( github.ref, 'stage') && github.event == 'pull-request' # needs to fix
#    needs: [test, docker-build]
#    runs-on: