variables:
  DOCKER_REGISTRY_URL: 100648102620.dkr.ecr.us-west-2.amazonaws.com
  APP_NAME: ci-cd-test
  DOCKER_HOST: tcp://docker:2375

workflow:
  rules:
    - if: '$CI_COMMIT_BRANCH == "stage"'

stages:
  - test
  - build
  - deploy



#test_a:
#  stage: test
#  script:
#    - echo "This test job will start as soon as build_a finishes."
#    - echo "It will not wait for build_b, or other jobs in the build stage, to finish."

docker-build:
  stage: build
  image:
    name: amazon/aws-cli
    entrypoint: [""]
  services:
    - docker:dind
  before_script:
    - amazon-linux-extras install docker
    - aws --version
    - docker --version
    - aws ecr get-login-password | docker login --username AWS --password-stdin $DOCKER_REGISTRY_URL
  script:
    - docker build --pull -t "$DOCKER_REGISTRY_URL/$APP_NAME:$CI_COMMIT_SHA" .
    - docker push "$DOCKER_REGISTRY_URL/$APP_NAME:$CI_COMMIT_SHA"
  only:
    - master
    - stage
    - main

tf_run:
  stage: deploy
  image:
    name: registry.gitlab.com/gitlab-org/gitlab-build-images:terraform
    entrypoint:
      - '/usr/bin/env'
      - 'PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin'
  variables:
    PLAN: plan.tfplan
#    JSON_PLAN_FILE: tfplan.json
  cache:
    paths:
      - .terraform
      - .terraform.lock.hcl
  before_script:
    - alias convert_report="jq -r '([.resource_changes[]?.change.actions?]|flatten)|{\"create\":(map(select(.==\"create\"))|length),\"update\":(map(select(.==\"update\"))|length),\"delete\":(map(select(.==\"delete\"))|length)}'"
    - cd terraform
    - terraform --version
    - terraform init -backend-config=bucket=config-bucket-100648102620 -backend-config=key=tf/$APP_NAME.tfstate
  script:
    - terraform validate
    - terraform plan -out=$PLAN
#    - "terraform show --json $PLAN | convert_report > $JSON_PLAN_FILE"
    - terraform apply -input=false $PLAN




